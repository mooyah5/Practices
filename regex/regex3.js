
// ---- 6) 비캡처 그룹: (?: ...) ----
// 저장 슬롯 없이 묶기만 함.
// 용도1. 선택(or) 묶기: 번호가 안섞여서 깔금
// 용도2. 수량자 범위 묶기: (abc+) 같은 거
console.log("// ---- 6) 비캡처 그룹: (?: ...) ----")
const reDogCat = /(?:dog|cat)s?/
console.log(reDogCat.test("dogs"), reDogCat.test("cat"))

// ---- 7) 룩어라운드 ----
// 지금 위치에서 앞/뒤 조건만 확인하고 글자를 소비하지 않는(0폭) 검사
// 매치는 그대로 두고, 양옆 조건만 걸고 싶을 때 사용.

// 1. (?=...) 긍정 앞보기: 바로 앞으로 ...가 오면 OK
// 2. (?!...) 부정 앞보기: 바로 앞으로 ...가 안 오면 OK
// 3. (?<=...) 긍정 뒤보기: 바로 뒤로 ...가 있었으면 OK
// 4. (?<!...) 부정 뒤보기: 바로 뒤로 ...가 없었으면 OK
// => 전부 0글자짜리 검사라서, 조건이 맞아도 텍스트를 "먹지(캡처하지)" 않음.

// 7-1) 복수형만 잡기
const re71 = /cat(?=s)/g  // 'cat' 뒤에 s가 따라오면 cat 매치 => 'cats'에서 'cat'만 잡힘

// 7-2) %가 아닌 숫자만
const re72 = /\d+(?!%)/g  // 숫자 뒤에 %가 없어야 그 숫자 매치 => "50%, 20%" 에서 "50"만

// 7-3) 콜론 뒤 값만 뽑기 (콜론 빼고)
const re73 = /(?<=^name:\s*).+$\m/  // 줄 시작에 "name:" 이 바로 앞에 있었으면 그 뒤 내용만 매치

// 7-4) '한국' 단어만 (합성어 제외, 한글 경계)
const re74 = /(?<!\p{Letter})한국(?!\p{Letter})/gu  // 앞뒤가 '글자'가 아니어야 => "대한민국"의 '한국'은 제외, "한국 사람"의 '한국'만

// 7-5) 비밀번호 정책 같은 동시 조건 검사
// 소문자/대문자/숫자 각 1개 이상, 전체 8-20자
const re75 = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[A-Za-z\d]{8,20}$/ // (?=.*[a-z]) 등은 앞보기로 조건만 추가하고, 마지막 본식에서 전체 길이/구성 체크.

//
